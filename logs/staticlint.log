2025/02/28 02:27:56 Включает в себя следующие анализаторы:
2025/02/28 02:27:56 1. printf: check consistency of Printf format strings and arguments
2025/02/28 02:27:56 2. shadow: check for possible unintended shadowing of variables
2025/02/28 02:27:56 3. structtag: check that struct field tags conform to reflect.StructTag.Get
2025/02/28 02:27:56 4. errcheck: check for unchecked errors
2025/02/28 02:27:56 5. SA1000: Invalid regular expression
2025/02/28 02:27:56 6. SA1001: Invalid template
2025/02/28 02:27:56 7. SA1002: Invalid format in time.Parse
2025/02/28 02:27:56 8. SA1003: Unsupported argument to functions in encoding/binary
2025/02/28 02:27:56 9. SA1004: Suspiciously small untyped constant in time.Sleep
2025/02/28 02:27:56 10. SA1005: Invalid first argument to exec.Command
2025/02/28 02:27:56 11. SA1006: Printf with dynamic first argument and no further arguments
2025/02/28 02:27:56 12. SA1007: Invalid URL in net/url.Parse
2025/02/28 02:27:56 13. SA1008: Non-canonical key in http.Header map
2025/02/28 02:27:56 14. SA1010: (*regexp.Regexp).FindAll called with n == 0, which will always return zero results
2025/02/28 02:27:56 15. SA1011: Various methods in the 'strings' package expect valid UTF-8, but invalid input is provided
2025/02/28 02:27:56 16. SA1012: A nil context.Context is being passed to a function, consider using context.TODO instead
2025/02/28 02:27:56 17. SA1013: io.Seeker.Seek is being called with the whence constant as the first argument, but it should be the second
2025/02/28 02:27:56 18. SA1014: Non-pointer value passed to Unmarshal or Decode
2025/02/28 02:27:56 19. SA1015: Using time.Tick in a way that will leak. Consider using time.NewTicker, and only use time.Tick in tests, commands and endless functions
2025/02/28 02:27:56 20. SA1016: Trapping a signal that cannot be trapped
2025/02/28 02:27:56 21. SA1017: Channels used with os/signal.Notify should be buffered
2025/02/28 02:27:56 22. SA1018: strings.Replace called with n == 0, which does nothing
2025/02/28 02:27:56 23. SA1019: Using a deprecated function, variable, constant or field
2025/02/28 02:27:56 24. SA1020: Using an invalid host:port pair with a net.Listen-related function
2025/02/28 02:27:56 25. SA1021: Using bytes.Equal to compare two net.IP
2025/02/28 02:27:56 26. SA1023: Modifying the buffer in an io.Writer implementation
2025/02/28 02:27:56 27. SA1024: A string cutset contains duplicate characters
2025/02/28 02:27:56 28. SA1025: It is not possible to use (*time.Timer).Reset's return value correctly
2025/02/28 02:27:56 29. SA1026: Cannot marshal channels or functions
2025/02/28 02:27:56 30. SA1027: Atomic access to 64-bit variable must be 64-bit aligned
2025/02/28 02:27:56 31. SA1028: sort.Slice can only be used on slices
2025/02/28 02:27:56 32. SA1029: Inappropriate key in call to context.WithValue
2025/02/28 02:27:56 33. SA1030: Invalid argument in call to a strconv function
2025/02/28 02:27:56 34. SA1031: Overlapping byte slices passed to an encoder
2025/02/28 02:27:56 35. SA1032: Wrong order of arguments to errors.Is
2025/02/28 02:27:56 36. SA2000: sync.WaitGroup.Add called inside the goroutine, leading to a race condition
2025/02/28 02:27:56 37. SA2001: Empty critical section, did you mean to defer the unlock?
2025/02/28 02:27:56 38. SA2002: Called testing.T.FailNow or SkipNow in a goroutine, which isn't allowed
2025/02/28 02:27:56 39. SA2003: Deferred Lock right after locking, likely meant to defer Unlock instead
2025/02/28 02:27:56 40. SA3000: TestMain doesn't call os.Exit, hiding test failures
2025/02/28 02:27:56 41. SA3001: Assigning to b.N in benchmarks distorts the results
2025/02/28 02:27:56 42. SA4000: Binary operator has identical expressions on both sides
2025/02/28 02:27:56 43. SA4001: &*x gets simplified to x, it does not copy x
2025/02/28 02:27:56 44. SA4003: Comparing unsigned values against negative values is pointless
2025/02/28 02:27:56 45. SA4004: The loop exits unconditionally after one iteration
2025/02/28 02:27:56 46. SA4005: Field assignment that will never be observed. Did you mean to use a pointer receiver?
2025/02/28 02:27:56 47. SA4006: A value assigned to a variable is never read before being overwritten. Forgotten error check or dead code?
2025/02/28 02:27:56 48. SA4008: The variable in the loop condition never changes, are you incrementing the wrong variable?
2025/02/28 02:27:56 49. SA4009: A function argument is overwritten before its first use
2025/02/28 02:27:56 50. SA4010: The result of append will never be observed anywhere
2025/02/28 02:27:56 51. SA4011: Break statement with no effect. Did you mean to break out of an outer loop?
2025/02/28 02:27:56 52. SA4012: Comparing a value against NaN even though no value is equal to NaN
2025/02/28 02:27:56 53. SA4013: Negating a boolean twice (!!b) is the same as writing b. This is either redundant, or a typo.
2025/02/28 02:27:56 54. SA4014: An if/else if chain has repeated conditions and no side-effects; if the condition didn't match the first time, it won't match the second time, either
2025/02/28 02:27:56 55. SA4015: Calling functions like math.Ceil on floats converted from integers doesn't do anything useful
2025/02/28 02:27:56 56. SA4016: Certain bitwise operations, such as x ^ 0, do not do anything useful
2025/02/28 02:27:56 57. SA4017: Discarding the return values of a function without side effects, making the call pointless
2025/02/28 02:27:56 58. SA4018: Self-assignment of variables
2025/02/28 02:27:56 59. SA4019: Multiple, identical build constraints in the same file
2025/02/28 02:27:56 60. SA4020: Unreachable case clause in a type switch
2025/02/28 02:27:56 61. SA4021: 'x = append(y)' is equivalent to 'x = y'
2025/02/28 02:27:56 62. SA4022: Comparing the address of a variable against nil
2025/02/28 02:27:56 63. SA4023: Impossible comparison of interface value with untyped nil
2025/02/28 02:27:56 64. SA4024: Checking for impossible return value from a builtin function
2025/02/28 02:27:56 65. SA4025: Integer division of literals that results in zero
2025/02/28 02:27:56 66. SA4026: Go constants cannot express negative zero
2025/02/28 02:27:56 67. SA4027: (*net/url.URL).Query returns a copy, modifying it doesn't change the URL
2025/02/28 02:27:56 68. SA4028: x % 1 is always zero
2025/02/28 02:27:56 69. SA4029: Ineffective attempt at sorting slice
2025/02/28 02:27:56 70. SA4030: Ineffective attempt at generating random number
2025/02/28 02:27:56 71. SA4031: Checking never-nil value against nil
2025/02/28 02:27:56 72. SA4032: Comparing runtime.GOOS or runtime.GOARCH against impossible value
2025/02/28 02:27:56 73. SA5000: Assignment to nil map
2025/02/28 02:27:56 74. SA5001: Deferring Close before checking for a possible error
2025/02/28 02:27:56 75. SA5002: The empty for loop ('for {}') spins and can block the scheduler
2025/02/28 02:27:56 76. SA5003: Defers in infinite loops will never execute
2025/02/28 02:27:56 77. SA5004: 'for { select { ...' with an empty default branch spins
2025/02/28 02:27:56 78. SA5005: The finalizer references the finalized object, preventing garbage collection
2025/02/28 02:27:56 79. SA5007: Infinite recursive call
2025/02/28 02:27:56 80. SA5008: Invalid struct tag
2025/02/28 02:27:56 81. SA5009: Invalid Printf call
2025/02/28 02:27:56 82. SA5010: Impossible type assertion
2025/02/28 02:27:56 83. SA5011: Possible nil pointer dereference
2025/02/28 02:27:56 84. SA5012: Passing odd-sized slice to function expecting even size
2025/02/28 02:27:56 85. SA6000: Using regexp.Match or related in a loop, should use regexp.Compile
2025/02/28 02:27:56 86. SA6001: Missing an optimization opportunity when indexing maps by byte slices
2025/02/28 02:27:56 87. SA6002: Storing non-pointer values in sync.Pool allocates memory
2025/02/28 02:27:56 88. SA6003: Converting a string to a slice of runes before ranging over it
2025/02/28 02:27:56 89. SA6005: Inefficient string comparison with strings.ToLower or strings.ToUpper
2025/02/28 02:27:56 90. SA6006: Using io.WriteString to write []byte
2025/02/28 02:27:56 91. SA9001: Defers in range loops may not run when you expect them to
2025/02/28 02:27:56 92. SA9002: Using a non-octal os.FileMode that looks like it was meant to be in octal.
2025/02/28 02:27:56 93. SA9003: Empty body in an if or else branch
2025/02/28 02:27:56 94. SA9004: Only the first constant has an explicit type
2025/02/28 02:27:56 95. SA9005: Trying to marshal a struct with no public fields nor custom marshaling
2025/02/28 02:27:56 96. SA9006: Dubious bit shifting of a fixed size integer value
2025/02/28 02:27:56 97. SA9007: Deleting a directory that shouldn't be deleted
2025/02/28 02:27:56 98. SA9008: else branch of a type assertion is probably not reading the right value
2025/02/28 02:27:56 99. SA9009: Ineffectual Go compiler directive
2025/02/28 02:27:56 Запуск анализатора...
